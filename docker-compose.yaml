version: '3.3'

x-function: &base_python
  volumes:
    - ./:/opt/:rw
    - poetry-volume:/opt/poetry:delegated
  environment: &env-vars
    POETRY_HOME: /opt/poetry
    DB_HOST: ${DB_HOST}
    DB_NAME: ${DB_NAME}
    DB_USER: ${DB_USER}
    DB_PASS: ${DB_PASSWORD}
  depends_on:
    - db
    - redis
  env_file:
    - .env
  networks:
    - internal


services:
  db:
    container_name: ${PROJECT_NAME}_db
    image: postgres:14.6-alpine
    volumes:
      - pg_data:/var/lib/postgresql/data/pgdata:rw
    env_file:
      - .env
    networks:
      - internal
    ports:
      - "${DB_PORT}:${DB_PORT}"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: trust
      PGDATA: /var/lib/postgresql/data/pgdata
    env_file:
      - .env

  nginx:
    build: ./nginx
    container_name: ${PROJECT_NAME}_nginx
    volumes:
      - static_dir:/opt/web/static/
      - media_dir:/opt/web/media/
    ports:
      - "80:80"
    depends_on:
      - web
    networks:
      - internal

  web:
    <<: *base_python
    build:
      context: ./web
      dockerfile: web.dockerfile
    container_name: ${PROJECT_SLUG}_web
    volumes:
      - static_dir:/opt/web/static/
      - media_dir:/opt/web/media/

  bot:
    <<: *base_python
    build:
      context: ./bot
      dockerfile: bot.dockerfile
    container_name: ${PROJECT_NAME}_bot

  redis:
    image: redis:7.0.11-alpine
    hostname: redis
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    networks:
      - internal
    env_file:
      - .env

  worker:
    <<: *base_python
    hostname: worker
    entrypoint: celery
    command: >
      -A web.core.celery worker -l info -P gevent
    links:
      - redis

  beat:
    <<: *base_python
    hostname: beat
    entrypoint: celery
    command: >
      -A web.core.celery beat -l debug
    links:
      - redis

volumes:
  static_dir:
  media_dir:
  pg_data:
  redis_data:
  poetry-volume:                 

networks:
  internal: