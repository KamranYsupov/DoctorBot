version: '3.8'

x-function: &python
  build:
      context: .
      dockerfile: app.dockerfile
  volumes:
    - poetry-volume:/opt/poetry:delegated
  environment: &env-vars
    POETRY_HOME: /opt/poetry
    DB_HOST: ${DB_HOST}
    DB_NAME: ${DB_NAME}
    DB_USER: ${DB_USER}
    DB_PASS: ${DB_PASSWORD}
  networks:
    - internal
  depends_on:
    - app_db
  env_file:
    .env

services:

  app_db:
    container_name: ${PROJECT_NAME}_db
    image: postgres:11
    volumes:
      - app_db-template:/var/lib/postgresql/data/pgdata:rw
    env_file:
      - .env
    networks:
      - internal
    ports:
      - "${DB_PORT}:${DB_PORT}"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: trust
      PGDATA: /var/lib/postgresql/data/pgdata

  web:
    <<: *python
    container_name: ${PROJECT_NAME}_web
    volumes:
    - ./web:/web:rw
    entrypoint: python
    command: >
      manage.py migrate --noinput
      manage.py runserver

  bot:
    <<: *python
    container_name: ${PROJECT_NAME}_bot
    volumes:
    - ./bot:/bot:rw
    command: >
      sh -c "python bot.main.py"

  redis:
    image: redis:7.0.11-alpine
    hostname: redis
    ports:
      - '6379:6379'

  worker:
    hostname: worker
    entrypoint: celery
    volumes:
      - ./:/
    command: >
       -A web.core.celery worker -l info -P gevent
    links:
      - redis
    depends_on:
      - app_db
      - redis

  beat:
    hostname: worker
    entrypoint: celery
    volumes:
      - ./:/
    command: >
       -A web.core.celery beat -l debug 
    links:
      - redis
    depends_on:
      - app_db
      - redis

  flower:
    hostname: flower
    entrypoint: celery
    command: -A web.core.celery flower -P gevent
    volumes:
      - ./:/
    links:
      - redis
    depends_on:
      - app_db
      - worker
      - redis
    ports:
      - '5555:5555'


volumes:
  app_db-template:
  poetry-volume:

networks:
  internal: